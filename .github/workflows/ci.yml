name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
        # Install the package in development mode
        pip install -e .

    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=clab_tools --cov-report=term --cov-report=html

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'
      with:
        name: coverage-report
        path: htmlcov/

  integration-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Install the package in development mode
        pip install -e .

    - name: Test CLI installation
      run: |
        chmod +x clab-tools.sh
        chmod +x install-cli.sh
        # Note: Cannot test sudo installation in CI, but can test script logic
        bash -n clab-tools.sh  # Syntax check
        bash -n install-cli.sh  # Syntax check

    - name: Test basic workflow
      run: |
        python clab_tools/main.py import-csv -n example_nodes.csv -c example_connections.csv
        python clab_tools/main.py show-data
        python clab_tools/main.py generate-topology -o test_topology.yml --validate

        # Verify output file was created
        test -f test_topology.yml

        # Clean up
        rm -f clab_topology.db test_topology.yml
